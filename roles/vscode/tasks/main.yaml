- name: Authorize Microsoft GPG key
  become: true
  ansible.builtin.apt_key:
    url: https://packages.microsoft.com/keys/microsoft.asc
    state: present

- name: Add Visual Studio Code apt repository to source list
  become: true
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] http://packages.microsoft.com/repos/code stable main
    filename: vscode
    state: present
    update_cache: true

- name: Install Visual Studio Code
  become: true
  ansible.builtin.apt:
    name: code
    state: latest
    update_cache: true

- name: Install Visual Studio Code extensions
  become: false
  ansible.builtin.shell:
    cmd: |
      code --install-extension {{ item }}
    creates: "{{ ansible_user_dir }}/.vscode/extensions/{{ item }}-*"
  loop:
    - ms-vscode.cpptools-extension-pack
    - llvm-vs-code-extensions.vscode-clangd
    - streetsidesoftware.code-spell-checker
    - mhutchie.git-graph
    - ms-python.python
    - ms-iot.vscode-ros
    - ms-python.black-formatter
    - ms-python.flake8
    - redhat.vscode-xml
    - vscode-icons-team.vscode-icons
  when: ansible_user_uid != 0

- name: Read Visual Studio Code settings
  become: false
  ansible.builtin.slurp:
    src: "{{ ansible_user_dir }}/.config/Code/User/settings.json"
  register: vscode__settings
  ignore_errors: true

- name: Prepare JSON merge
  ansible.builtin.set_fact:
    vscode__settings_object: "{{ (vscode__settings.content | default('e30=')) | b64decode | from_json }}"
    vscode__settings_override: |
      {
        "editor.formatOnSave": true,
        "workbench.iconTheme": "vscode-icons",
        "clangd.detectExtensionConflicts": false,
        "C_Cpp.intelliSenseEngine": "disabled"
      }

- name: Install Visual Studio Code settings
  ansible.builtin.copy:
    content: "{{ vscode__settings_object | combine(vscode__settings_override | from_json) | to_nice_json(indent=2) }}"
    dest: "{{ ansible_user_dir }}/.config/Code/User/settings.json"
    force: true
    mode: "0644"
